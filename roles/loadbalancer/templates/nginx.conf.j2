load_module /usr/lib/nginx/modules/ngx_stream_module.so;

worker_processes  1;

events {
    worker_connections  1024;
}

stream {
  upstream turingpi_dns {
{% for address in addresses %}
    server {{ address }}:5353;
{% endfor %}
  }
  upstream turingpi_67 {
{% for address in addresses %}
    server {{ address }}:67;
{% endfor %}
  }
  upstream turingpi_grafana {
{% for address in addresses %}
    server {{ address }}:3000;
{% endfor %}
  }
  upstream turingpi_kube {
{% for address in control_plane_addresses %}
    server {{ address }}:6443;
{% endfor %}
  }
  upstream turingpi_pihole_http {
{% for address in addresses %}
    server {{ address }}:9080;
{% endfor %}
  }
  upstream turingpi_pihole_49312 {
{% for address in addresses %}
    server {{ address }}:49312;
{% endfor %}
  }

  server {
    listen 9080;
    listen [::]:9080;
    proxy_pass turingpi_pihole_http;
  }

  server {
    listen 53 udp;
    proxy_pass turingpi_dns;
  }

  server {
    listen 67 udp;
    proxy_pass turingpi_67;
  }

  server {
    listen 3000;
    proxy_pass turingpi_grafana;
  }

  server {
    # Let kubernetes handle SSL itself
    listen 6443;
    listen [::]:6443;
    proxy_pass turingpi_kube;
  }

  server {
    listen 49312;
    proxy_pass turingpi_pihole_49312;
  }
}

http {
  upstream turingpi_https {
{% for address in addresses %}
    server {{ address }}:443;
{% endfor %}
  }
  upstream turingpi_pihole_https {
{% for address in addresses %}
    server {{ address }}:9443;
{% endfor %}
  }
  upstream turingpi_unshort {
{% for address in addresses %}
    server {{ address }}:8111;
{% endfor %}
  }

  include       mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  keepalive_timeout  65;

  # Base template were generated 2022-04-19, Mozilla Guideline v5.6, nginx 1.18.0, OpenSSL 1.1.1n, modern configuration
  # https://ssl-config.mozilla.org/#server=nginx&version=1.18.0&config=modern&openssl=1.1.1n&guideline=5.6

  ssl_certificate /etc/ssl/certs/cert.pem;
  ssl_certificate_key /etc/ssl/private/key.pem;
  ssl_client_certificate /etc/ssl/certs/cloudflare.crt;
  # (set cloudflare signed only as optional)
  ssl_verify_client optional_no_ca;
  ssl_trusted_certificate /etc/ssl/certs/cloudflare.crt;

  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:10m;  # about 40000 sessions
  ssl_session_tickets off;

  # modern configuration
  ssl_protocols TLSv1.3;
  ssl_prefer_server_ciphers off;

  # HSTS (ngx_http_headers_module is required) (63072000 seconds)
  add_header Strict-Transport-Security "max-age=63072000" always;

  # OCSP stapling
  ssl_stapling on;
  ssl_stapling_verify on;

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name cyberbunny.cyou *.cyberbunny.cyou;

    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cyberbunny.cyou www.cyberbunny.cyou;

    location / {
      proxy_pass https://turingpi_https$request_uri;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name pihole.cyberbunny.cyou;

    location / {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://turingpi_pihole_https;
      proxy_redirect http://turingpi_pihole_https https://$host;
      if ( $request_uri ~ ^/(.*)$ ) {
        proxy_pass          http://turingpi_pihole_https/admin/$1;
      }
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name tunshort.cyberbunny.cyou;
    location / {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://turingpi_unshort;
      proxy_redirect http://turingpi_unshort http://$host;
      if ( $request_uri ~ ^/(.*)$ ) {
        proxy_pass          http://turingpi_unshort/d/t.co/$1;
      }
    }
  }
}
